[{"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\reportWebVitals.js":"1","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\App.js":"2","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\index.js":"3","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\components\\MenuComponent.js":"4","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\shared\\dishes.js":"5","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\components\\DishDetailComponent.js":"6","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\components\\MainComponent.js":"7","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\components\\HeaderComponent.js":"8","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\components\\FooterComponent.js":"9","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\components\\ContactComponent.js":"10","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\shared\\comments.js":"11","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\components\\HomeComponent.js":"12","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\shared\\promotions.js":"13","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\components\\AboutComponent.js":"14","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\redux\\configureStore.js":"15","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\shared\\leaders.js":"16","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\redux\\dishes.js":"17","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\redux\\comments.js":"18","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\redux\\ActionTypes.js":"19","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\redux\\ActionCreators.js":"20","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\redux\\leaders.js":"21","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\redux\\forms.js":"22","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\redux\\promotions.js":"23","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\shared\\baseUrl.js":"24"},{"size":362,"mtime":1610611330283,"results":"25","hashOfConfig":"26"},{"size":399,"mtime":1610775985172,"results":"27","hashOfConfig":"26"},{"size":642,"mtime":1610766903434,"results":"28","hashOfConfig":"26"},{"size":3263,"mtime":1611041260020,"results":"29","hashOfConfig":"26"},{"size":1490,"mtime":1610777176380,"results":"30","hashOfConfig":"26"},{"size":8194,"mtime":1611042948749,"results":"31","hashOfConfig":"26"},{"size":6663,"mtime":1611042830690,"results":"32","hashOfConfig":"26"},{"size":5711,"mtime":1610938234364,"results":"33","hashOfConfig":"26"},{"size":2640,"mtime":1610775771977,"results":"34","hashOfConfig":"26"},{"size":22659,"mtime":1611031209975,"results":"35","hashOfConfig":"26"},{"size":4279,"mtime":1610777235646,"results":"36","hashOfConfig":"26"},{"size":1708,"mtime":1611041304463,"results":"37","hashOfConfig":"26"},{"size":445,"mtime":1610777198141,"results":"38","hashOfConfig":"26"},{"size":4363,"mtime":1610934078890,"results":"39","hashOfConfig":"26"},{"size":1099,"mtime":1611030035489,"results":"40","hashOfConfig":"26"},{"size":2382,"mtime":1610777221666,"results":"41","hashOfConfig":"26"},{"size":634,"mtime":1611026282066,"results":"42","hashOfConfig":"26"},{"size":762,"mtime":1611042699550,"results":"43","hashOfConfig":"26"},{"size":411,"mtime":1611040545179,"results":"44","hashOfConfig":"26"},{"size":4818,"mtime":1611042633015,"results":"45","hashOfConfig":"26"},{"size":199,"mtime":1611017646769,"results":"46","hashOfConfig":"26"},{"size":170,"mtime":1611029950580,"results":"47","hashOfConfig":"26"},{"size":690,"mtime":1611041096940,"results":"48","hashOfConfig":"26"},{"size":48,"mtime":1611040513292,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pp1pcx",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\reportWebVitals.js",[],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\App.js",[],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\index.js",[],["102","103"],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\components\\MenuComponent.js",[],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\shared\\dishes.js",[],["104","105"],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\components\\DishDetailComponent.js",["106","107","108"],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\components\\MainComponent.js",["109"],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\components\\HeaderComponent.js",[],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\components\\FooterComponent.js",[],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\components\\ContactComponent.js",["110","111","112","113","114","115","116","117","118"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current state is: \" + JSON.stringify(values));\r\n        alert(\"Current state is: \" + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n\r\n\r\n\r\n// //Previous code\r\n// import React, { Component } from 'react';\r\n// import { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\n// class Contact extends Component {\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n\r\n//         this.state = {\r\n//             firstname: '',\r\n//             lastname: '',\r\n//             telnum: '',\r\n//             email: '',\r\n//             agree: false,\r\n//             contactType: 'Tel.',\r\n//             message: '',\r\n//             touched: {\r\n//                 firstname: false,\r\n//                 lastname: false,\r\n//                 telnum: false,\r\n//                 email: false\r\n//             }\r\n//         }\r\n\r\n//         this.handleSubmit = this.handleSubmit.bind(this);\r\n//         this.handleInputChange = this.handleInputChange.bind(this);\r\n//         this.handleBlur = this.handleBlur.bind(this);\r\n//     }\r\n\r\n//     handleInputChange(event) {\r\n//        const target = event.target;\r\n//        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n//        const name = target.name;\r\n\r\n//        this.setState({\r\n//            [name]: value\r\n//        });\r\n//     }\r\n\r\n//     handleSubmit(event) {\r\n//         console.log(\"Current state is: \" + JSON.stringify(this.state));\r\n//         alert(\"Current state is: \" + JSON.stringify(this.state));\r\n//         event.preventDefault(); //preventing the control to go to next page\r\n//     }\r\n\r\n//     handleBlur = (field) => (evt) => {\r\n//         this.setState({\r\n//             touched: {...this.state.touched, [field]: true}\r\n//         });\r\n//     }\r\n\r\n//     validate(firstname, lastname, telnum, email) {\r\n//         const errors = {\r\n//             firstname: '',\r\n//             lastname: '',\r\n//             telnum: '',\r\n//             email: ''\r\n//         };\r\n\r\n//         if (this.state.touched.firstname && firstname.length < 3) \r\n//             errors.firstname = 'First Name should be >= 3 characters';\r\n//         else if (this.state.touched.firstname && firstname.length > 10)\r\n//             errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n//         if (this.state.touched.lastname && lastname.length < 3)\r\n//             errors.lastname = 'Last Name should be >= 3 characters';\r\n//         else if (this.state.touched.lastname && lastname.length > 10)\r\n//             errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n//         const reg = /^\\d+$/;\r\n//         if (this.state.touched.telnum && !reg.test(telnum))\r\n//             errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n//         if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n//             errors.email = 'Email should contain a @';\r\n\r\n//         return errors;\r\n//     }\r\n\r\n\r\n//     render() {\r\n\r\n//         const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n\r\n//         return (\r\n//             <div className=\"container\">\r\n//                 <div className=\"row\">\r\n//                     <Breadcrumb>\r\n//                         <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n//                         <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n//                     </Breadcrumb>\r\n//                     <div className=\"col-12\">\r\n//                         <h3>Contact Us</h3>\r\n//                         <hr />\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"row row-content\">\r\n//                     <div className=\"col-12\">\r\n//                         <h3>Location Information</h3>\r\n//                     </div>\r\n//                     <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n//                         <h5>Our Address</h5>\r\n//                         <address>\r\n//                             121, Clear Water Bay Road<br />\r\n//                             Clear Water Bay, Kowloon<br />\r\n//                             HONG KONG<br />\r\n//                             <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n//                             <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n//                             <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n//                         </address>\r\n//                     </div>\r\n//                     <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n//                         <h5>Map of our Location</h5>\r\n//                     </div>\r\n//                     <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n//                         <div className=\"btn-group\" role=\"group\">\r\n//                             <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n//                             <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n//                             <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"row row-content\">\r\n//                     <div className=\"col-12\">\r\n//                         <h3>Send us your feedback</h3>\r\n//                     </div>\r\n//                     <div className=\"col-12 col-md-9\">\r\n//                         <Form onSubmit={this.handleSubmit}>\r\n//                         <FormGroup row>\r\n//                                 <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n//                                 <Col md={10}>\r\n//                                     <Input type=\"text\" id=\"firstname\" name=\"firstname\"\r\n//                                         placeholder=\"First Name\"\r\n//                                         value={this.state.firstname}\r\n//                                         valid={errors.firstname === ''}\r\n//                                         invalid={errors.firstname !== ''}\r\n//                                         onBlur={this.handleBlur('firstname')}\r\n//                                         onChange={this.handleInputChange} />\r\n\r\n//                                     <FormFeedback>{errors.firstname}</FormFeedback>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n//                                 <Col md={10}>\r\n//                                     <Input type=\"text\" id=\"lastname\" name=\"lastname\"\r\n//                                         placeholder=\"Last Name\"\r\n//                                         value={this.state.lastname}\r\n//                                         valid={errors.lastname === ''}\r\n//                                         invalid={errors.lastname !== ''}\r\n//                                         onBlur={this.handleBlur('lastname')}\r\n//                                         onChange={this.handleInputChange} />\r\n\r\n//                                     <FormFeedback>{errors.lastname}</FormFeedback>\r\n//                                 </Col>                        \r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                             <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n//                                 <Col md={10}>\r\n//                                     <Input type=\"tel\" id=\"telnum\" name=\"telnum\"\r\n//                                         placeholder=\"Tel. number\"\r\n//                                         value={this.state.telnum}\r\n//                                         valid={errors.telnum === ''}\r\n//                                         invalid={errors.telnum !== ''}\r\n//                                         onBlur={this.handleBlur('telnum')}\r\n//                                         onChange={this.handleInputChange} />\r\n\r\n//                                     <FormFeedback>{errors.telnum}</FormFeedback>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Label htmlFor=\"email\" md={2}>Email</Label>\r\n//                                 <Col md={10}>\r\n//                                     <Input type=\"email\" id=\"email\" name=\"email\"\r\n//                                         placeholder=\"Email\"\r\n//                                         value={this.state.email}\r\n//                                         valid={errors.email === ''}\r\n//                                         invalid={errors.email !== ''}\r\n//                                         onBlur={this.handleBlur('email')}\r\n//                                         onChange={this.handleInputChange} />\r\n\r\n//                                     <FormFeedback>{errors.email}</FormFeedback>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Col md={{size: 6, offset: 2}}>\r\n//                                     <FormGroup check>\r\n//                                         <Label check>\r\n//                                             <Input type=\"checkbox\"\r\n//                                                 name=\"agree\"\r\n//                                                 checked={this.state.agree}\r\n//                                                 onChange={this.handleInputChange} /> {' '}\r\n//                                             <strong>May we contact you?</strong>\r\n//                                         </Label>\r\n//                                     </FormGroup>\r\n//                                 </Col>\r\n//                                 <Col md={{size: 3, offset: 1}}>\r\n//                                     <Input type=\"select\" name=\"contactType\"\r\n//                                             value={this.state.contactType}\r\n//                                             onChange={this.handleInputChange}>\r\n//                                         <option>Tel.</option>\r\n//                                         <option>Email</option>\r\n//                                     </Input>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n//                                 <Col md={10}>\r\n//                                     <Input type=\"textarea\" id=\"message\" name=\"message\"\r\n//                                         rows=\"5\"\r\n//                                         placeholder=\"Enter text here\"\r\n//                                         value={this.state.message}\r\n//                                         onChange={this.handleInputChange}></Input>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Col md={{size: 10, offset: 2}}>\r\n//                                     <Button type=\"submit\" color=\"primary\">\r\n//                                         Send Feedback\r\n//                                     </Button>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                         </Form>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Contact;","C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\shared\\comments.js",[],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\components\\HomeComponent.js",[],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\shared\\promotions.js",[],["119","120"],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\components\\AboutComponent.js",[],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\redux\\configureStore.js",[],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\shared\\leaders.js",[],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\redux\\dishes.js",[],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\redux\\comments.js",["121"],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\redux\\ActionTypes.js",[],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\redux\\ActionCreators.js",["122","123"],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\redux\\leaders.js",[],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\redux\\forms.js",[],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\redux\\promotions.js",[],"C:\\NAVYA\\fullstackdev\\FullStack\\react-front-end\\confusion\\src\\shared\\baseUrl.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"124","replacedBy":"128"},{"ruleId":"126","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":150,"column":19,"nodeType":"132","endLine":151,"endColumn":63},{"ruleId":"130","severity":1,"message":"133","line":164,"column":19,"nodeType":"132","endLine":170,"endColumn":21},{"ruleId":"130","severity":1,"message":"134","line":186,"column":19,"nodeType":"132","endLine":188,"endColumn":48},{"ruleId":"135","severity":1,"message":"136","line":36,"column":5,"nodeType":"137","messageId":"138","endLine":38,"endColumn":6},{"ruleId":"139","severity":1,"message":"140","line":4,"column":33,"nodeType":"141","messageId":"142","endLine":4,"endColumn":40},{"ruleId":"143","severity":1,"message":"144","line":63,"column":29,"nodeType":"132","endLine":63,"endColumn":71},{"ruleId":"130","severity":1,"message":"133","line":77,"column":37,"nodeType":"132","endLine":83,"endColumn":39},{"ruleId":"130","severity":1,"message":"133","line":99,"column":37,"nodeType":"132","endLine":105,"endColumn":39},{"ruleId":"130","severity":1,"message":"133","line":121,"column":37,"nodeType":"132","endLine":127,"endColumn":39},{"ruleId":"130","severity":1,"message":"133","line":144,"column":37,"nodeType":"132","endLine":150,"endColumn":39},{"ruleId":"130","severity":1,"message":"145","line":166,"column":45,"nodeType":"132","endLine":168,"endColumn":47},{"ruleId":"130","severity":1,"message":"131","line":174,"column":37,"nodeType":"132","endLine":175,"endColumn":66},{"ruleId":"130","severity":1,"message":"134","line":184,"column":37,"nodeType":"132","endLine":186,"endColumn":68},{"ruleId":"124","replacedBy":"146"},{"ruleId":"126","replacedBy":"147"},{"ruleId":"139","severity":1,"message":"148","line":1,"column":10,"nodeType":"141","messageId":"142","endLine":1,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":71,"column":29,"nodeType":"151","messageId":"152","endLine":71,"endColumn":76},{"ruleId":"149","severity":1,"message":"150","line":77,"column":29,"nodeType":"151","messageId":"152","endLine":77,"endColumn":65},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],["153"],["154"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["153"],["154"],"'COMMENTS' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]