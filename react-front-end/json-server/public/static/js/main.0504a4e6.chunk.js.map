{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/ContactComponent.js","components/DishDetailComponent.js","components/AboutComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/leaders.js","redux/promotions.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","src","image","alt","name","designation","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadLoading","leadErrMess","RenderMenuItem","to","id","width","Menu","menu","dishes","map","active","Header","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","onClick","href","height","isOpen","navbar","outline","toggle","onSubmit","htmlFor","type","innerRef","input","check","color","Component","Footer","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","feedId","model","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","RenderDish","top","RenderComments","comms","postComment","dishId","comm","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","rating","defaultValue","DishDetail","comments","RenderLeader","tag","left","middle","object","body","heading","About","leaders","title","list","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","LEADERS_LOADING","ADD_LEADERS","LEADERS_FAILED","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","ActionTypes","payload","addComment","catch","console","log","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","classNames","timeout","path","component","filter","featured","promotions","promo","lead","exact","match","parseInt","params","commentsErrMess","location","key","withRouter","connect","newFeedback","actions","reset","Dishes","action","Comments","concat","Leaders","Promotions","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0504a4e6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish}\r\n                        isLoading={props.dishesLoading}\r\n                        errMess={props.dishesErrMess} />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion}\r\n                        isLoading={props.promoLoading}\r\n                        errMess={props.promoErrMess} />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                        isLoading={props.leadLoading}\r\n                        errMess={props.leadErrMess} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n//1st-way of implementing functional components\r\nfunction RenderMenuItem({ dish }) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`}>\r\n            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\n//2nd-way of implementing functional components\r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish}></RenderMenuItem>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Menu;\r\n\r\n\r\n/*\r\n//class component implementation\r\nclass Menu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log('Menu Componenet constructor is invoked');\r\n    }\r\n\r\n    render() {\r\n\r\n        const menu = this.props.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <Card onClick={() => this.props.onClick(dish.id)}>\r\n                        <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                        <CardImgOverlay>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                        </CardImgOverlay>\r\n                    </Card>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        console.log('Menu Component render is invoked');\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n\r\n*/","import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleNav = this.toggleNav.bind(this); //instead of using an arrow function to use the toggleNav function, bind the function to use it directly as \"this.toggleNav\"\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal(); //close the modal after clicking submit button\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} /> {/*extracting input values from DOM and making available to our react application, \r\n                                                                                    instead of writing our own handler form validation functions, \r\n                                                                                    now DOM will handle them automatically*/}\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                        innerRef={(input) => this.remember = input} />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        // console.log(\"Current state is: \" + JSON.stringify(values));\r\n        alert(\"Current state is: \" + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form postFeedback={this.props.postFeedback} feedId={this.props.feedId} model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n\r\n\r\n\r\n// //Previous code\r\n// import React, { Component } from 'react';\r\n// import { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\n// class Contact extends Component {\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n\r\n//         this.state = {\r\n//             firstname: '',\r\n//             lastname: '',\r\n//             telnum: '',\r\n//             email: '',\r\n//             agree: false,\r\n//             contactType: 'Tel.',\r\n//             message: '',\r\n//             touched: {\r\n//                 firstname: false,\r\n//                 lastname: false,\r\n//                 telnum: false,\r\n//                 email: false\r\n//             }\r\n//         }\r\n\r\n//         this.handleSubmit = this.handleSubmit.bind(this);\r\n//         this.handleInputChange = this.handleInputChange.bind(this);\r\n//         this.handleBlur = this.handleBlur.bind(this);\r\n//     }\r\n\r\n//     handleInputChange(event) {\r\n//        const target = event.target;\r\n//        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n//        const name = target.name;\r\n\r\n//        this.setState({\r\n//            [name]: value\r\n//        });\r\n//     }\r\n\r\n//     handleSubmit(event) {\r\n//         console.log(\"Current state is: \" + JSON.stringify(this.state));\r\n//         alert(\"Current state is: \" + JSON.stringify(this.state));\r\n//         event.preventDefault(); //preventing the control to go to next page\r\n//     }\r\n\r\n//     handleBlur = (field) => (evt) => {\r\n//         this.setState({\r\n//             touched: {...this.state.touched, [field]: true}\r\n//         });\r\n//     }\r\n\r\n//     validate(firstname, lastname, telnum, email) {\r\n//         const errors = {\r\n//             firstname: '',\r\n//             lastname: '',\r\n//             telnum: '',\r\n//             email: ''\r\n//         };\r\n\r\n//         if (this.state.touched.firstname && firstname.length < 3) \r\n//             errors.firstname = 'First Name should be >= 3 characters';\r\n//         else if (this.state.touched.firstname && firstname.length > 10)\r\n//             errors.firstname = 'First Name should be <= 10 characters';\r\n\r\n//         if (this.state.touched.lastname && lastname.length < 3)\r\n//             errors.lastname = 'Last Name should be >= 3 characters';\r\n//         else if (this.state.touched.lastname && lastname.length > 10)\r\n//             errors.lastname = 'Last Name should be <= 10 characters';\r\n\r\n//         const reg = /^\\d+$/;\r\n//         if (this.state.touched.telnum && !reg.test(telnum))\r\n//             errors.telnum = 'Tel. Number should contain only numbers';\r\n\r\n//         if(this.state.touched.email && email.split('').filter(x => x === '@').length !== 1)\r\n//             errors.email = 'Email should contain a @';\r\n\r\n//         return errors;\r\n//     }\r\n\r\n\r\n//     render() {\r\n\r\n//         const errors = this.validate(this.state.firstname, this.state.lastname, this.state.telnum, this.state.email);\r\n\r\n//         return (\r\n//             <div className=\"container\">\r\n//                 <div className=\"row\">\r\n//                     <Breadcrumb>\r\n//                         <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n//                         <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n//                     </Breadcrumb>\r\n//                     <div className=\"col-12\">\r\n//                         <h3>Contact Us</h3>\r\n//                         <hr />\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"row row-content\">\r\n//                     <div className=\"col-12\">\r\n//                         <h3>Location Information</h3>\r\n//                     </div>\r\n//                     <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n//                         <h5>Our Address</h5>\r\n//                         <address>\r\n//                             121, Clear Water Bay Road<br />\r\n//                             Clear Water Bay, Kowloon<br />\r\n//                             HONG KONG<br />\r\n//                             <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n//                             <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n//                             <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n//                         </address>\r\n//                     </div>\r\n//                     <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n//                         <h5>Map of our Location</h5>\r\n//                     </div>\r\n//                     <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n//                         <div className=\"btn-group\" role=\"group\">\r\n//                             <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n//                             <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n//                             <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//                 <div className=\"row row-content\">\r\n//                     <div className=\"col-12\">\r\n//                         <h3>Send us your feedback</h3>\r\n//                     </div>\r\n//                     <div className=\"col-12 col-md-9\">\r\n//                         <Form onSubmit={this.handleSubmit}>\r\n//                         <FormGroup row>\r\n//                                 <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n//                                 <Col md={10}>\r\n//                                     <Input type=\"text\" id=\"firstname\" name=\"firstname\"\r\n//                                         placeholder=\"First Name\"\r\n//                                         value={this.state.firstname}\r\n//                                         valid={errors.firstname === ''}\r\n//                                         invalid={errors.firstname !== ''}\r\n//                                         onBlur={this.handleBlur('firstname')}\r\n//                                         onChange={this.handleInputChange} />\r\n\r\n//                                     <FormFeedback>{errors.firstname}</FormFeedback>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n//                                 <Col md={10}>\r\n//                                     <Input type=\"text\" id=\"lastname\" name=\"lastname\"\r\n//                                         placeholder=\"Last Name\"\r\n//                                         value={this.state.lastname}\r\n//                                         valid={errors.lastname === ''}\r\n//                                         invalid={errors.lastname !== ''}\r\n//                                         onBlur={this.handleBlur('lastname')}\r\n//                                         onChange={this.handleInputChange} />\r\n\r\n//                                     <FormFeedback>{errors.lastname}</FormFeedback>\r\n//                                 </Col>                        \r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                             <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n//                                 <Col md={10}>\r\n//                                     <Input type=\"tel\" id=\"telnum\" name=\"telnum\"\r\n//                                         placeholder=\"Tel. number\"\r\n//                                         value={this.state.telnum}\r\n//                                         valid={errors.telnum === ''}\r\n//                                         invalid={errors.telnum !== ''}\r\n//                                         onBlur={this.handleBlur('telnum')}\r\n//                                         onChange={this.handleInputChange} />\r\n\r\n//                                     <FormFeedback>{errors.telnum}</FormFeedback>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Label htmlFor=\"email\" md={2}>Email</Label>\r\n//                                 <Col md={10}>\r\n//                                     <Input type=\"email\" id=\"email\" name=\"email\"\r\n//                                         placeholder=\"Email\"\r\n//                                         value={this.state.email}\r\n//                                         valid={errors.email === ''}\r\n//                                         invalid={errors.email !== ''}\r\n//                                         onBlur={this.handleBlur('email')}\r\n//                                         onChange={this.handleInputChange} />\r\n\r\n//                                     <FormFeedback>{errors.email}</FormFeedback>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Col md={{size: 6, offset: 2}}>\r\n//                                     <FormGroup check>\r\n//                                         <Label check>\r\n//                                             <Input type=\"checkbox\"\r\n//                                                 name=\"agree\"\r\n//                                                 checked={this.state.agree}\r\n//                                                 onChange={this.handleInputChange} /> {' '}\r\n//                                             <strong>May we contact you?</strong>\r\n//                                         </Label>\r\n//                                     </FormGroup>\r\n//                                 </Col>\r\n//                                 <Col md={{size: 3, offset: 1}}>\r\n//                                     <Input type=\"select\" name=\"contactType\"\r\n//                                             value={this.state.contactType}\r\n//                                             onChange={this.handleInputChange}>\r\n//                                         <option>Tel.</option>\r\n//                                         <option>Email</option>\r\n//                                     </Input>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n//                                 <Col md={10}>\r\n//                                     <Input type=\"textarea\" id=\"message\" name=\"message\"\r\n//                                         rows=\"5\"\r\n//                                         placeholder=\"Enter text here\"\r\n//                                         value={this.state.message}\r\n//                                         onChange={this.handleInputChange}></Input>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                             <FormGroup row>\r\n//                                 <Col md={{size: 10, offset: 2}}>\r\n//                                     <Button type=\"submit\" color=\"primary\">\r\n//                                         Send Feedback\r\n//                                     </Button>\r\n//                                 </Col>\r\n//                             </FormGroup>\r\n//                         </Form>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// export default Contact;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Stagger } from 'react-animation-components';\r\n\r\n\r\n//functional component implementation\r\nfunction RenderDish({ dish }) {\r\n  return (\r\n    <div className=\"col-12 col-md-5 m-1\">\r\n      <FadeTransform\r\n        in\r\n        transformProps={{\r\n          exitTransform: 'scale(0.5) translateY(-50%)'\r\n        }}>\r\n        <Card>\r\n          <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n          <CardBody>\r\n            <CardTitle>{dish.name}</CardTitle>\r\n            <CardText>{dish.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </FadeTransform>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n//function RenderComments({ comms, addComment, dishId }) {\r\nfunction RenderComments({ comms, postComment, dishId }) {\r\n  if (comms != null) {\r\n    return (\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n        <h4>Comments</h4>\r\n        <ul className=\"list-unstyled\">\r\n          <Stagger in>\r\n            {comms.map((comm) => {\r\n              return (\r\n                <li key={comm.id}>\r\n                  <p>{comm.comment}</p>\r\n                  <p>-- {comm.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comm.date)))}</p>\r\n                </li>\r\n              );\r\n            })}\r\n          </Stagger>\r\n        </ul>\r\n\r\n        {/* <CommentForm dishId={dishId} addComment={addComment} /> */}\r\n        <CommentForm dishId={dishId} postComment={postComment} />\r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <div></div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst DishDetail = (props) => {\r\n  if (props.isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Loading />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  else if (props.errMess) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h4>{props.errMess}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  else if (props.dish != null) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>{props.dish.name}</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <RenderDish dish={props.dish} />\r\n          <RenderComments comms={props.comments}\r\n            //addComment={props.addComment}\r\n            postComment={props.postComment}\r\n            dishId={props.dish.id} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <div></div>\r\n    );\r\n  }\r\n}\r\n\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false\r\n    };\r\n\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    })\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    this.toggleModal();\r\n    // console.log(\"Current state is: \" + JSON.stringify(values));\r\n    // alert(\"Current state is: \" + JSON.stringify(values));\r\n\r\n    // this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <Button outline onClick={this.toggleModal}>\r\n            <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n          </Button>\r\n        </div>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"rating\" md={5}>Rating</Label>\r\n                <Col md={10}>\r\n                  <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                    className=\"form-control\" defaultValue={1}>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"author\" md={5}>Your Name</Label>\r\n                <Col md={10}>\r\n                  <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                    placeholder=\"Your Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      minLength: minLength(3), maxLength: maxLength(15)\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".author\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      minLength: 'Must be greater than 2 characters',\r\n                      maxLength: 'Must be 15 characters or less'\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"comment\" md={5}>Comment</Label>\r\n                <Col md={10}>\r\n                  <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                    rows=\"6\"\r\n                    className=\"form-control\" />\r\n                </Col>\r\n              </Row>\r\n\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 10 }}>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Submit\r\n                                    </Button>\r\n                </Col>\r\n              </Row>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default DishDetail;\r\n\r\n\r\n/*\r\n//class component implementation\r\nclass DishDetail extends Component {\r\n\r\n  componentDidMount() {\r\n    console.log('DishDetail Component componentDidMount is invoked');\r\n}\r\n\r\ncomponentDidUpdate() {\r\n  console.log('DishDetail Component componentDidUpdate is invoked');\r\n}\r\n\r\n  renderDish(dish) {\r\n    console.log('DishDetail Component renderDish is invoked');\r\n\r\n    if (dish != null)\r\n      return (\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n            <Card>\r\n              <CardImg width=\"100%\" top src={dish.image} alt={dish.name} />\r\n              <CardBody>\r\n                <CardTitle>{dish.name}</CardTitle>\r\n                <CardText>{dish.description}</CardText>\r\n              </CardBody>\r\n            </Card>\r\n          </div>\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n            <h4>Comments</h4>\r\n            {this.renderComments(dish.comments)}\r\n          </div>\r\n        </div>\r\n      );\r\n    else\r\n      return (\r\n        <div></div>\r\n      );\r\n  }\r\n\r\n  renderComments(comms) {\r\n    console.log('DishDetail Component renderComments is invoked');\r\n\r\n    return (\r\n      <ul className=\"list-unstyled\">\r\n        {comms.map((comm) => {\r\n          return (\r\n            <li key={comm.id}>\r\n              <p>{comm.comment}</p>\r\n              <p>-- {comm.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse( comm.date )))}</p>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n\r\n  render() {\r\n    console.log('DishDetail Component render is invoked');\r\n    return (\r\n      <div className=\"container\">\r\n        {this.renderDish(this.props.dish)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DishDetail;\r\n*/","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\n\r\nfunction RenderLeader({ leader, isLoading, errMess }) {\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div key={leader.id} className=\"col-12 mt-5\">\r\n                <FadeTransform\r\n                    in\r\n                    transformProps={{\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }}>\r\n                    <Media tag=\"li\">\r\n                        <Media left middle>\r\n                            <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                        </Media>\r\n                        <Media body className=\"ml-5\">\r\n                            <Media heading>{leader.name}</Media>\r\n                            <p>{leader.designation}</p>\r\n                            <p>{leader.description}</p>\r\n                        </Media>\r\n                    </Media>\r\n                </FadeTransform >\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <RenderLeader leader={leader} isLoading={leader.leadLoading}\r\n                errMess={leader.leadErrMess}></RenderLeader>\r\n        );\r\n    });\r\n\r\n    if (props.leaders.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.leaders.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.leaders.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>About Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <h2>Our History</h2>\r\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5\">\r\n                        <Card>\r\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                            <CardBody>\r\n                                <dl className=\"row p-1\">\r\n                                    <dt className=\"col-6\">Started</dt>\r\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                    <dd className=\"col-6\">$1,250,375</dd>\r\n                                    <dt className=\"col-6\">Employees</dt>\r\n                                    <dd className=\"col-6\">40</dd>\r\n                                </dl>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Card>\r\n                            <CardBody className=\"bg-faded\">\r\n                                <blockquote className=\"blockquote\">\r\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Corporate Leadership</h2>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Media list>\r\n                            {leaders}\r\n                        </Media>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;    \r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import * as ActionTypes from './ActionTypes';\r\n//import { DISHES } from '../shared/dishes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n// export const addComment = (dishId, rating, author, comment) => ({\r\n//     type: ActionTypes.ADD_COMMENT,\r\n//     payload: {\r\n//         dishId: dishId,\r\n//         rating: rating,\r\n//         author: author,\r\n//         comment: comment\r\n//     }\r\n// });\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); \r\n        alert('Your comment could not be posted\\nError: '+error.message); \r\n    });\r\n};\r\n\r\n\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    };\r\n    \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addFeedback(response)))\r\n    .catch(error =>  { console.log('post feedback', error.message); \r\n        alert('Your feedback could not be posted\\nError: '+error.message); \r\n    });\r\n};\r\n\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    // setTimeout(() => {\r\n    //     dispatch(addDishes(DISHES));\r\n    // }, 2000);\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {        {/*Server responded but error response code */}\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {      {/*Server itself does not respond*/}\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) { \r\n                return response;\r\n            } else {        \r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {     \r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) { \r\n                return response;\r\n            } else {        \r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {     \r\n                var errmess = new Error(error.message);\r\n                throw errmess;\r\n            })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addLeaders(promos)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Menu from './MenuComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport Aboutus from './AboutComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n//import { addComment, fetchDishes, fetchComments, fetchPromos } from '../redux/ActionCreators';\r\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    //addComment: (dishId, rating, author, comment) => dispatch(addComment(dishId, rating, author, comment)),\r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n    fetchDishes: () => { dispatch(fetchDishes()) },\r\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n    fetchComments: () => dispatch(fetchComments()),\r\n    fetchPromos: () => dispatch(fetchPromos()),\r\n    fetchLeaders: () => dispatch(fetchLeaders())\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n    render() {\r\n        const HomePage = () => {\r\n            return (\r\n                <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishesErrMess={this.props.dishes.errMess}\r\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n                    promoLoading={this.props.promotions.isLoading}\r\n                    promoErrMess={this.props.promotions.errMess}\r\n                    leader={this.props.leaders.leaders.filter((lead) => lead.featured)[0]}\r\n                    leadLoading={this.props.leaders.isLoading}\r\n                    leadErrMess={this.props.leaders.errMess}\r\n                />\r\n            );\r\n        }\r\n\r\n        const DishWithId = ({ match }) => {\r\n            return (\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMess={this.props.dishes.errMess}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n                    commentsErrMess={this.props.comments.errMess}\r\n                    // addComment={this.props.addComment}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            );\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch>\r\n                            <Route path=\"/home\" component={HomePage} />\r\n                            <Route path=\"/aboutus\" component={() => <Aboutus leaders={this.props.leaders} />} />\r\n                            <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n                            <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                            <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm}  postFeedback={this.props.postFeedback}/>} />\r\n                            <Redirect to=\"/home\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n\r\n\r\n//  //Previous code\r\n// import React, { Component } from 'react';\r\n// import Home from './HomeComponent';\r\n// import Menu from './MenuComponent';\r\n// import Header from './HeaderComponent';\r\n// import Footer from './FooterComponent';\r\n// import Contact from './ContactComponent';\r\n// import DishDetail from './DishDetailComponent';\r\n// import Aboutus from './AboutComponent';\r\n// import { DISHES } from '../shared/dishes';\r\n// import { COMMENTS } from '../shared/comments';\r\n// import { LEADERS } from '../shared/leaders';\r\n// import { PROMOTIONS } from '../shared/promotions';\r\n// import { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n\r\n// class Main extends Component {\r\n\r\n//     constructor(props) {\r\n//         super(props);\r\n//         console.log('Main Componenet constructor is invoked');\r\n\r\n//         this.state = {\r\n//             dishes: DISHES,\r\n//             comments: COMMENTS,\r\n//             promotions: PROMOTIONS,\r\n//             leaders: LEADERS\r\n//             // selectedDish: null\r\n//         };\r\n//     }\r\n\r\n//     /* onDishSelect(dishId) {\r\n//          this.setState({ selectedDish: dishId });\r\n//          console.log('Main Componenet onDishSelect is invoked');\r\n\r\n//      }\r\n//      */\r\n\r\n\r\n// render() {\r\n//     console.log('Main Componenet render is invoked');\r\n\r\n//     const HomePage = () => {\r\n//         return (\r\n//             <Home dish={this.state.dishes.filter((dish) => dish.featured)[0]}\r\n//                 promotion={this.state.promotions.filter((promo) => promo.featured)[0]}\r\n//                 leader={this.state.leaders.filter((leader) => leader.featured)[0]}\r\n//             />\r\n//         );\r\n//     }\r\n\r\n//     const DishWithId = ({ match }) => {\r\n//         return (\r\n//             <DishDetail dish={this.state.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n//                 comments={this.state.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))} />\r\n//         );\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <Header />\r\n\r\n//             {/* <Menu dishes={this.state.dishes} onClick={(dishId) => this.onDishSelect(dishId)} />\r\n//                 <DishDetail dish={this.state.dishes.filter((dish) => dish.id === this.state.selectedDish)[0]} />\r\n//                 */}\r\n\r\n//             <Switch>\r\n//                 <Route path=\"/home\" component={HomePage} />\r\n//                 <Route path=\"/aboutus\" component={() => <Aboutus leaders={this.state.leaders} />} />\r\n//                 <Route exact path=\"/menu\" component={() => <Menu dishes={this.state.dishes} />} />\r\n//                 <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n//                 <Route exact path=\"/contactus\" component={Contact} />\r\n//                 <Redirect to=\"/home\" />\r\n//             </Switch>\r\n//             <Footer />\r\n//         </div>\r\n//     );\r\n// }\r\n// }\r\n\r\n// export default Main;\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Dishes = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes: []\r\n    }, action) => {\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return { ...state, isLoading: false, errMess: null, dishes: action.payload };\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, dishes: [] }\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n};","import { COMMENTS } from '../shared/comments';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: []\r\n}, action) => {\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return { ...state, errMess: null, comments: action.payload };\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return { ...state, errMess: action.payload };\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            // comment.id = state.comments.length;\r\n            // comment.date = new Date().toISOString();\r\n            return {...state, comments: state.comments.concat(comment)};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","//import { LEADERS } from '../shared/leaders';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, leaders: [] }\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n};","//import { PROMOTIONS } from '../shared/promotions';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions: []\r\n}, action) => {\r\n    \r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return { ...state, isLoading: false, errMess: null, promotions: action.payload };\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, promotions: [] }\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import Main from './components/MainComponent';\nimport './App.css';\nimport { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Leaders } from './leaders';\r\nimport { Promotions } from './promotions';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        \r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* //Previous code\r\nimport { createStore } from 'redux';\r\nimport { Reducer, initialState } from './reducer';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        Reducer,\r\n        initialState,\r\n    );\r\n\r\n    return store;\r\n}\r\n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}